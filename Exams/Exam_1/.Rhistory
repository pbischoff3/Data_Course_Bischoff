library(tidyverse)
# I. Read the cleaned_covid_data.csv file into an R data frame. (20 pts)
df <- read.csv("C:\\Users\\pbisc\\Desktop\\Data_Course_Bischoff\\Exams\\Exam_1\\cleaned_covid_data.csv")
df
#II. Subset the data set to just show states that begin with “A” and save this as an object called A_states. (20 pts)
#Use the tidyverse suite of packages
#Selecting rows where the state starts with “A” is tricky (you can use the grepl() function or just a vector of those states if you prefer)
starts_w_a <- "^A"
A_states <- subset(df, grepl(starts_w_a, df$Province_State))
view(A_states)
#III. Create a plot of that subset showing Deaths over time, with a separate facet for each state. (20 pts)
#Create a scatterplot
#Add loess curves WITHOUT standard error shading
#Keep scales “free” in each facet
ggplot(A_states,aes(x=Last_Update,y=Deaths)) +
geom_point(aes(color=Province_State)) +
facet_wrap(~Province_State,scales = "free") +
geom_smooth()
#IV. (Back to the full dataset) Find the “peak” of Case_Fatality_Ratio for each state and save this as
# a new data frame object called state_max_fatality_rate. (20 pts)
state_max_fatality_rate <-
max
#I’m looking for a new data frame with 2 columns:
#  “Province_State”
#“Maximum_Fatality_Ratio”
#Arrange the new data frame in descending order by Maximum_Fatality_Ratio
#This might take a few steps. Be careful about how you deal with missing values!
#  V. Use that new data frame from task IV to create another plot. (20 pts)
#X-axis is Province_State
#Y-axis is Maximum_Fatality_Ratio
#bar plot
#x-axis arranged in descending order, just like the data frame (make it a factor to accomplish this)
#X-axis labels turned to 90 deg to be readable
#Even with this partial data set (not current), you should be able to see that (within these dates), different states had very different fatality ratios.
#VI. (BONUS 10 pts) Using the FULL data set, plot cumulative deaths for the entire US over time
#You’ll need to read ahead a bit and use the dplyr package functions group_by() and summarize() to accomplish this.
install.packages("matrixStats")
load("matrixStats")
df$Case_Fatality_Ratio <-  rowMaxs(as.matrix((df[,"Case_Fatality_Ratio"]) ))
load(matrixStats)
library(matrixStats)
df$Case_Fatality_Ratio <-  rowMaxs(as.matrix((df[,"Case_Fatality_Ratio"]) ))
rowMaxs(as.matrix((df[,"Case_Fatality_Ratio"]) ))
library(tidyverse)
# I. Read the cleaned_covid_data.csv file into an R data frame. (20 pts)
df <- read.csv("C:\\Users\\pbisc\\Desktop\\Data_Course_Bischoff\\Exams\\Exam_1\\cleaned_covid_data.csv")
df
#II. Subset the data set to just show states that begin with “A” and save this as an object called A_states. (20 pts)
#Use the tidyverse suite of packages
#Selecting rows where the state starts with “A” is tricky (you can use the grepl() function or just a vector of those states if you prefer)
starts_w_a <- "^A"
A_states <- subset(df, grepl(starts_w_a, df$Province_State))
view(A_states)
#III. Create a plot of that subset showing Deaths over time, with a separate facet for each state. (20 pts)
#Create a scatterplot
#Add loess curves WITHOUT standard error shading
#Keep scales “free” in each facet
ggplot(A_states,aes(x=Last_Update,y=Deaths)) +
geom_point(aes(color=Province_State)) +
facet_wrap(~Province_State,scales = "free") +
geom_smooth()
#IV. (Back to the full dataset) Find the “peak” of Case_Fatality_Ratio for each state and save this as
# a new data frame object called state_max_fatality_rate. (20 pts)
state_max_fatality_rate <-
max
#I’m looking for a new data frame with 2 columns:
#  “Province_State”
#“Maximum_Fatality_Ratio”
#Arrange the new data frame in descending order by Maximum_Fatality_Ratio
#This might take a few steps. Be careful about how you deal with missing values!
#  V. Use that new data frame from task IV to create another plot. (20 pts)
#X-axis is Province_State
#Y-axis is Maximum_Fatality_Ratio
#bar plot
#x-axis arranged in descending order, just like the data frame (make it a factor to accomplish this)
#X-axis labels turned to 90 deg to be readable
#Even with this partial data set (not current), you should be able to see that (within these dates), different states had very different fatality ratios.
#VI. (BONUS 10 pts) Using the FULL data set, plot cumulative deaths for the entire US over time
#You’ll need to read ahead a bit and use the dplyr package functions group_by() and summarize() to accomplish this.
summarise(df)
View(df)
?filter
df %>%
group_by(Province_State) %>%
summarise(Case_Fatality_Ratio = n())
?summarize
df %>%
group_by(Province_State) %>%
summarize(max_fatality = max(Case_Fatality_Ratio, na.rm = TRUE))
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE))
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
arrange(Case_Fatality_Ratio)
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
arrange(Case_Fatality_Ratio)
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
arrange(Maximum_Fatality_Ratio)
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
arrange(Maximum_Fatality_Ratio) %>%
print(state_max_fatality_rate)
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
arrange(Maximum_Fatality_Ratio) %>%
view(state_max_fatality_rate)
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
arrange(Maximum_Fatality_Ratio) %>%
view(Maximum_Fatality_Ratio)
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
arrange(Maximum_Fatality_Ratio)
view(state_max_fatality_rate)
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
arrange(Maximum_Fatality_Ratio,desc())
view(state_max_fatality_rate)
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
desc(Maximum_Fatality_Ratio)
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
desc(,Maximum_Fatality_Ratio)
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE))
state_max_fatality_rate[order(-Case_Fatality_Ratio)]
state_max_fatality_rate[order(-Case_Fatality_Ratio),]
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
sort(Maximum_Fatality_Ratio, decreasing = TRUE)
view(state_max_fatality_rate)
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
sort(Case_Fatality_Ratio, decreasing = TRUE)
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
arrange(Case_Fatality_Ratio, decreasing = TRUE)
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
arrange(-Maximum_Fatality_Ratio)
view(state_max_fatality_rate)
state_max_fatality_rate
library(tidyverse)
df <- read.csv("C:\\Users\\pbisc\\Desktop\\Data_Course_Bischoff\\Exams\\Exam_1\\cleaned_covid_data.csv")
df
#II. Subset the data set to just show states that begin with “A” and save this as an object called A_states. (20 pts)
#Use the tidyverse suite of packages
#Selecting rows where the state starts with “A” is tricky (you can use the grepl() function or just a vector of those states if you prefer)
starts_w_a <- "^A"
A_states <- subset(df, grepl(starts_w_a, df$Province_State))
view(A_states)
#III. Create a plot of that subset showing Deaths over time, with a separate facet for each state. (20 pts)
#Create a scatterplot
#Add loess curves WITHOUT standard error shading
#Keep scales “free” in each facet
ggplot(A_states,aes(x=Last_Update,y=Deaths)) +
geom_point(aes(color=Province_State)) +
facet_wrap(~Province_State,scales = "free") +
geom_smooth()
#III. Create a plot of that subset showing Deaths over time, with a separate facet for each state. (20 pts)
#Create a scatterplot
#Add loess curves WITHOUT standard error shading
#Keep scales “free” in each facet
ggplot(A_states,aes(x=Last_Update,y=Deaths)) +
geom_point(aes(color=Province_State)) +
facet_wrap(~Province_State,scales = "free") +
geom_smooth()+
loess(Deaths ~ Last_Update, data=A_states)
#III. Create a plot of that subset showing Deaths over time, with a separate facet for each state. (20 pts)
#Create a scatterplot
#Add loess curves WITHOUT standard error shading
#Keep scales “free” in each facet
ggplot(A_states,aes(x=Last_Update,y=Deaths)) +
geom_point(aes(color=Province_State)) +
facet_wrap(~Province_State,scales = "free") +
geom_smooth()+
loess(Deaths ~ Last_Update)
#III. Create a plot of that subset showing Deaths over time, with a separate facet for each state. (20 pts)
#Create a scatterplot
#Add loess curves WITHOUT standard error shading
#Keep scales “free” in each facet
ggplot(A_states,aes(x=Last_Update,y=Deaths)) +
geom_point(aes(color=Province_State)) +
facet_wrap(~Province_State,scales = "free") +
geom_smooth()+
loess(A_states$Deaths ~ A_states$Last_Update)
#III. Create a plot of that subset showing Deaths over time, with a separate facet for each state. (20 pts)
#Create a scatterplot
#Add loess curves WITHOUT standard error shading
#Keep scales “free” in each facet
ggplot(A_states,aes(x=Last_Update,y=Deaths)) +
geom_point(aes(color=Province_State)) +
facet_wrap(~Province_State,scales = "free") +
geom_smooth(method="lm",aes(group=Province_State),color="black",se=FALSE)
library(tidyverse)
# I. Read the cleaned_covid_data.csv file into an R data frame. (20 pts)
df <- read.csv("C:\\Users\\pbisc\\Desktop\\Data_Course_Bischoff\\Exams\\Exam_1\\cleaned_covid_data.csv")
df
#II. Subset the data set to just show states that begin with “A” and save this as an object called A_states. (20 pts)
#Use the tidyverse suite of packages
#Selecting rows where the state starts with “A” is tricky (you can use the grepl() function or just a vector of those states if you prefer)
starts_w_a <- "^A"
A_states <- subset(df, grepl(starts_w_a, df$Province_State))
view(A_states)
#III. Create a plot of that subset showing Deaths over time, with a separate facet for each state. (20 pts)
#Create a scatterplot
#Add loess curves WITHOUT standard error shading
#Keep scales “free” in each facet
ggplot(A_states,aes(x=Last_Update,y=Deaths)) +
geom_point(aes(color=Province_State)) +
facet_wrap(~Province_State,scales = "free") +
geom_smooth(method="lm",aes(group=Province_State),color="black",se=FALSE)
#III. Create a plot of that subset showing Deaths over time, with a separate facet for each state. (20 pts)
#Create a scatterplot
#Add loess curves WITHOUT standard error shading
#Keep scales “free” in each facet
ggplot(A_states,aes(x=Last_Update,y=Deaths)) +
geom_point(aes(color=Province_State)) +
facet_wrap(~Province_State,scales = "free") +
geom_smooth(method="loess",aes(group=Province_State),color="black",se=FALSE)
#IV. (Back to the full dataset) Find the “peak” of Case_Fatality_Ratio for each state and save this as
# a new data frame object called state_max_fatality_rate. (20 pts)
#I’m looking for a new data frame with 2 columns:
#  “Province_State”
#“Maximum_Fatality_Ratio”
#Arrange the new data frame in descending order by Maximum_Fatality_Ratio
#This might take a few steps. Be careful about how you deal with missing values!
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
arrange(-Maximum_Fatality_Ratio)
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
arrange(-Maximum_Fatality_Ratio)
state_max_fatality_rate
library(tidyverse)
df
#II. Subset the data set to just show states that begin with “A” and save this as an object called A_states. (20 pts)
#Use the tidyverse suite of packages
#Selecting rows where the state starts with “A” is tricky (you can use the grepl() function or just a vector of those states if you prefer)
starts_w_a <- "^A"
df
df <- read.csv("C:\\Users\\pbisc\\Desktop\\Data_Course_Bischoff\\Exams\\Exam_1\\cleaned_covid_data.csv")
#II. Subset the data set to just show states that begin with “A” and save this as an object called A_states. (20 pts)
#Use the tidyverse suite of packages
#Selecting rows where the state starts with “A” is tricky (you can use the grepl() function or just a vector of those states if you prefer)
starts_w_a <- "^A"
A_states <- subset(df, grepl(starts_w_a, df$Province_State))
view(A_states)
#III. Create a plot of that subset showing Deaths over time, with a separate facet for each state. (20 pts)
#Create a scatterplot
#Add loess curves WITHOUT standard error shading
#Keep scales “free” in each facet
ggplot(A_states,aes(x=Last_Update,y=Deaths)) +
geom_point(aes(color=Province_State)) +
facet_wrap(~Province_State,scales = "free") +
geom_smooth(method="loess",aes(group=Province_State),color="black",se=FALSE)
#IV. (Back to the full dataset) Find the “peak” of Case_Fatality_Ratio for each state and save this as
# a new data frame object called state_max_fatality_rate. (20 pts)
#I’m looking for a new data frame with 2 columns:
#  “Province_State”
#“Maximum_Fatality_Ratio”
#Arrange the new data frame in descending order by Maximum_Fatality_Ratio
#This might take a few steps. Be careful about how you deal with missing values!
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
arrange(-Maximum_Fatality_Ratio)
state_max_fatality_rate
state_max_fatality_rate %>%
ggplot(state_max_fatality_rate,aes(x=Province_State,y=Maximum_Fatality_Ratio)) +
geom_bar()
state_max_fatality_rate %>%
ggplot(state_max_fatality_rate,aes(x=Province_State,y=Maximum_Fatality_Ratio)) +
geom_bar(aes(color=Province_State))
state_max_fatality_rate %>%
ggplot(state_max_fatality_rate,aes(x=Province_State,y=Maximum_Fatality_Ratio)) +
geom_bar(aes(color=Province_State))
state_max_fatality_rate %>%  ggplot(state_max_fatality_rate,aes(x=Province_State,y=Maximum_Fatality_Ratio)) +
geom_bar(aes(color=Province_State))
state_max_fatality_rate %>%  ggplot(state_max_fatality_rate,aes(x=Province_State,y=Maximum_Fatality_Ratio))
state_max_fatality_rate %>%  ggplot(state_max_fatality_rate,aes(x = Province_State,y = Maximum_Fatality_Ratio)) +
geom_bar(aes(color=Province_State))
state_max_fatality_rate %>%  ggplot(state_max_fatality_rate,aes(x = Province_State,y = Maximum_Fatality_Ratio)) +
geom_bar()
state_max_fatality_rate %>%  ggplot(state_max_fatality_rate,aes(x = Province_State,y = Maximum_Fatality_Ratio)) +
geom_bar(aes())
state_max_fatality_rate %>%  ggplot(state_max_fatality_rate,aes(x = Province_State,y = Maximum_Fatality_Ratio)) +
geom_bar(stat = "Maximum_Fatality_Ratio")
ggplot(state_max_fatality_rate,aes(x = Province_State,y = Maximum_Fatality_Ratio)) +
geom_bar(stat = "Maximum_Fatality_Ratio")
ggplot(state_max_fatality_rate,aes(x = Province_State,y = Maximum_Fatality_Ratio)) +
geom_bar(stat = "identity")
ggplot(state_max_fatality_rate,aes(x = Province_State,y = Maximum_Fatality_Ratio)) +
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
arrange(-Maximum_Fatality_Ratio) +
geom_bar(stat = "identity")
ggplot(state_max_fatality_rate,aes(x = Province_State,y = Maximum_Fatality_Ratio)) +
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
arrange(-Maximum_Fatality_Ratio) %>%
geom_bar(stat = "identity")
ggplot(state_max_fatality_rate,aes(x = Province_State,y = Maximum_Fatality_Ratio)) +
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
arrange(-Maximum_Fatality_Ratio) %>%
geom_bar(stat = "identity")
ggplot(state_max_fatality_rate,aes(x = reorder(Province_State, -Maximum_Fatality_Ratio),y = Maximum_Fatality_Ratio)) +
geom_bar(stat = "identity")
ggplot(state_max_fatality_rate,aes(x = reorder(Province_State, -Maximum_Fatality_Ratio),y = Maximum_Fatality_Ratio)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90))
df %>% plot(ecdf(df[x = Last_Update,y = Deaths]))
library(dplyr)
df %>%
group_by(Deaths) %>%
mutate(cum_sum_deaths = cumsum(Deaths))
df %>% ggplot(x = Last_Update,y = cum_sum_deaths)
df %>% ggplot(x = Last_Update,y = cum_sum_deaths) +
geom_bar(stat = "identity")
df %>% ggplot(x = Last_Update,y = cum_sum_deaths) +
geom_bar(,stat = "identity")
df %>% ggplot(x = Last_Update,y = cum_sum_deaths) +
geom_bar(x = Last_Update, y = cum_sum_deaths, stat = "identity")
df %>% ggplot(aes(x = Last_Update,y = cum_sum_deaths)) +
geom_bar(stat = "identity")
df %>%
group_by(Deaths) %>%
mutate(cum_sum_deaths = cumsum(Deaths))
df %>%
group_by(Deaths) %>%
df$cum_sum_deaths <-  mutate(cum_sum_deaths = cumsum(Deaths))
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
df %>%
group_by(Deaths) %>%
mutate(cum_sum_deaths = cumsum(Deaths))
df %>%
group_by(Deaths) %>%
df_new <- mutate(cum_sum_deaths = cumsum(Deaths))
df %>%
group_by(Deaths) %>%
df_new <- mutate(df,cum_sum_deaths = cumsum(Deaths))
df %>%
group_by(Deaths) +
df_new <- mutate(df,cum_sum_deaths = cumsum(Deaths))
View(A_states)
mutate(df,cum_sum_deaths = cumsum(Deaths))
summarize(df)
mutate(df,cum_sum_deaths = cumsum(Deaths))
df %>%
group_by(Last_Update) %>%
summarize(cum_sum_deaths = cumsum(Deaths))
cum_sum_deaths <-
df %>%
group_by(Last_Update) %>%
summarize(cum_sum_deaths = cumsum(Deaths))
cum_sum_deaths <-
df %>%
group_by(Deaths) %>%
summarize(cum_sum_deaths = cumsum(Deaths))
cum_sum_deaths
cum_sum_deaths <-
df %>%
group_by(Deaths,Last_Update) %>%
summarize(cum_sum_deaths = cumsum(Deaths))
cum_sum_deaths
df %>% ggplot(aes(x = Last_Update,y = cum_sum_deaths))+
geom_bar(stat = "identity")
df %>% plot(Last_Update,cumsum(Deaths))
for(i in df
sum(df$Deaths)
)
sum(df$Deaths)
library(tidyverse)
library(dplyr)
# I. Read the cleaned_covid_data.csv file into an R data frame. (20 pts)
df <- read.csv("C:\\Users\\pbisc\\Desktop\\Data_Course_Bischoff\\Exams\\Exam_1\\cleaned_covid_data.csv")
df
#II. Subset the data set to just show states that begin with “A” and save this as an object called A_states. (20 pts)
#Use the tidyverse suite of packages
#Selecting rows where the state starts with “A” is tricky (you can use the grepl() function or just a vector of those states if you prefer)
starts_w_a <- "^A"
A_states <- subset(df, grepl(starts_w_a, df$Province_State))
view(A_states)
#III. Create a plot of that subset showing Deaths over time, with a separate facet for each state. (20 pts)
#Create a scatterplot
#Add loess curves WITHOUT standard error shading
#Keep scales “free” in each facet
ggplot(A_states,aes(x=Last_Update,y=Deaths)) +
geom_point(aes(color=Province_State)) +
facet_wrap(~Province_State,scales = "free") +
geom_smooth(method="loess",aes(group=Province_State),color="black",se=FALSE)
#IV. (Back to the full dataset) Find the “peak” of Case_Fatality_Ratio for each state and save this as
# a new data frame object called state_max_fatality_rate. (20 pts)
#I’m looking for a new data frame with 2 columns:
#  “Province_State”
#“Maximum_Fatality_Ratio”
#Arrange the new data frame in descending order by Maximum_Fatality_Ratio
#This might take a few steps. Be careful about how you deal with missing values!
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
arrange(-Maximum_Fatality_Ratio)
state_max_fatality_rate
#  V. Use that new data frame from task IV to create another plot. (20 pts)
#X-axis is Province_State
#Y-axis is Maximum_Fatality_Ratio
#bar plot
#x-axis arranged in descending order, just like the data frame (make it a factor to accomplish this)
#X-axis labels turned to 90 deg to be readable
#Even with this partial data set (not current), you should be able to see that (within these dates), different states had very different fatality ratios.
ggplot(state_max_fatality_rate,aes(x = reorder(Province_State, -Maximum_Fatality_Ratio),y = Maximum_Fatality_Ratio)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90))
#VI. (BONUS 10 pts) Using the FULL data set, plot cumulative deaths for the entire US over time
#You’ll need to read ahead a bit and use the dplyr package functions group_by() and summarize() to accomplish this.
df %>%
group_by(Last_Update) %>%
summarize(MeanSepLength = cumsum(Deaths))     # pay attention to SUMMARIZE
df
df %>% ggplot(aes(x = Last_Update,
y = Deaths,
fill = forcats::fct_rev(Province_State))) +
geom_area(color = "black")
df %>% ggplot(aes(x = Last_Update,
y = Deaths,
fill = forcats::fct_rev(Province_State))) +
geom_area(color = "black") +
labs(title = "US Population by age",
subtitle = "1900 to 2002",
caption = "source: U.S. Census Bureau, 2003, HS-3",
x = "Year",
y = "Population in Millions",
fill = "Age Group") +
scale_fill_brewer(palette = "Set2") +
theme_minimal()
df %>% ggplot(aes(x = Last_Update,
y = Deaths,
fill = forcats::fct_rev(Province_State))) %>%
geom_area(color = "black") %>%
labs(title = "US Population by age",
subtitle = "1900 to 2002",
caption = "source: U.S. Census Bureau, 2003, HS-3",
x = "Year",
y = "Population in Millions",
fill = "Age Group") %>%
scale_fill_brewer(palette = "Set2") %>%
theme_minimal()
gc()
library(tidyverse)
library(dplyr)
df <- read.csv("C:\\Users\\pbisc\\Desktop\\Data_Course_Bischoff\\Exams\\Exam_1\\cleaned_covid_data.csv")
df
#II. Subset the data set to just show states that begin with “A” and save this as an object called A_states. (20 pts)
#Use the tidyverse suite of packages
#Selecting rows where the state starts with “A” is tricky (you can use the grepl() function or just a vector of those states if you prefer)
starts_w_a <- "^A"
A_states <- subset(df, grepl(starts_w_a, df$Province_State))
view(A_states)
#III. Create a plot of that subset showing Deaths over time, with a separate facet for each state. (20 pts)
#Create a scatterplot
#Add loess curves WITHOUT standard error shading
#Keep scales “free” in each facet
ggplot(A_states,aes(x=Last_Update,y=Deaths)) +
geom_point(aes(color=Province_State)) +
facet_wrap(~Province_State,scales = "free") +
geom_smooth(method="loess",aes(group=Province_State),color="black",se=FALSE)
#IV. (Back to the full dataset) Find the “peak” of Case_Fatality_Ratio for each state and save this as
# a new data frame object called state_max_fatality_rate. (20 pts)
#I’m looking for a new data frame with 2 columns:
#  “Province_State”
#“Maximum_Fatality_Ratio”
#Arrange the new data frame in descending order by Maximum_Fatality_Ratio
#This might take a few steps. Be careful about how you deal with missing values!
state_max_fatality_rate <- df %>%
group_by(Province_State) %>%
summarize(Maximum_Fatality_Ratio = max(Case_Fatality_Ratio, na.rm = TRUE)) %>%
arrange(-Maximum_Fatality_Ratio)
state_max_fatality_rate
#X-axis is Province_State
#Y-axis is Maximum_Fatality_Ratio
#bar plot
#x-axis arranged in descending order, just like the data frame (make it a factor to accomplish this)
#X-axis labels turned to 90 deg to be readable
#Even with this partial data set (not current), you should be able to see that (within these dates), different states had very different fatality ratios.
ggplot(state_max_fatality_rate,aes(x = reorder(Province_State, -Maximum_Fatality_Ratio),y = Maximum_Fatality_Ratio)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90))
